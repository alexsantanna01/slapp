package com.slapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RoomImageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomImageAllPropertiesEquals(RoomImage expected, RoomImage actual) {
        assertRoomImageAutoGeneratedPropertiesEquals(expected, actual);
        assertRoomImageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomImageAllUpdatablePropertiesEquals(RoomImage expected, RoomImage actual) {
        assertRoomImageUpdatableFieldsEquals(expected, actual);
        assertRoomImageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomImageAutoGeneratedPropertiesEquals(RoomImage expected, RoomImage actual) {
        assertThat(actual)
            .as("Verify RoomImage auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomImageUpdatableFieldsEquals(RoomImage expected, RoomImage actual) {
        assertThat(actual)
            .as("Verify RoomImage relevant properties")
            .satisfies(a -> assertThat(a.getUrl()).as("check url").isEqualTo(expected.getUrl()))
            .satisfies(a -> assertThat(a.getAltText()).as("check altText").isEqualTo(expected.getAltText()))
            .satisfies(a -> assertThat(a.getDisplayOrder()).as("check displayOrder").isEqualTo(expected.getDisplayOrder()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRoomImageUpdatableRelationshipsEquals(RoomImage expected, RoomImage actual) {
        assertThat(actual)
            .as("Verify RoomImage relationships")
            .satisfies(a -> assertThat(a.getRoom()).as("check room").isEqualTo(expected.getRoom()));
    }
}
